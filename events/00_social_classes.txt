add_namespace = social_classes

#CALCULATE STRATA BY STATE AND ASSIGN TO COUNTRY
news_event = {
	id = social_classes.0
	picture = GFX_report_event_election_vote
	
	is_triggered_only = yes

	hidden = yes

	immediate = {

		every_country = {


		#Social classes will grow to meet their caps over time. These don't instantly reflect the actual population, rather what they will gravitate towards over time.

		#Set a variable to divide by when getting average national strata ratios
		set_variable = {
			var = strata_states_calculated
			value = 0
		}

		set_variable = {
			var = nation_all_strata_ratio
			value = 0
		}

		set_variable = {
			var = nation_all_actual_lower_strata
			value = 0
		}

		set_variable = {
			var = nation_all_actual_middle_strata
			value = 0
		}

		set_variable = {
			var = nation_all_actual_upper_strata
			value = 0
		}

		set_variable = {
			var = nation_all_lower_strata_ratio
			value = 0
		}

		set_variable = {
			var = nation_all_middle_strata_ratio
			value = 0
		}

		set_variable = {
			var = nation_all_upper_strata_ratio
			value = 0
		}

			#Calculate social class population caps on a state-by-state basis
			every_owned_state = {
				

				#Divide each class points value by this to find a %
				set_variable = {
					var = state_all_strata_points
					value = 0
				}

				#Actual percentage caps - the desired ratios of the state population per class

				set_variable = {
					var = state_lower_strata_cap
					value = 0
				}

				set_variable = {
					var = state_middle_strata_cap
					value = 0
				}

				set_variable = {
					var = state_upper_strata_cap
					value = 0
				}


				#Point values - not actual percentages
				set_variable = {
					var = state_lower_strata_points
					value = 0
				}

				#You never want to go below 0, or strange things will happen when calculating percentages, so clamp a minimum at 0 and throw in an arbitrary maximum

				clamp_variable = {
					var = state_lower_strata_points
					min = 0
					max = 999
				}

				set_variable = {
					var = state_middle_strata_points
					value = 0
				}

				clamp_variable = {
					var = state_middle_strata_points
					min = 0
					max = 999
				}

				set_variable = {
					var = state_upper_strata_points
					value = 0
				}

				clamp_variable = {
					var = state_upper_strata_points
					min = 0
					max = 999
				}

				#CALCULATIONS

				#Default lower class points = 35
				add_to_variable = { state_lower_strata_points = 35 }

				#Default middle class points = 5
				add_to_variable = { state_middle_strata_points = 5 }

				#Default upper class points = 1
				add_to_variable = { state_upper_strata_points = 1 }
				
				#Civilian factories

				#6 middle class points per civilian factory
				set_variable = {
					var = middle_strata_civfactory_points
					value = industrial_complex_level
				}

				multiply_variable = {
					middle_strata_civfactory_points = 5
				}

				add_to_variable = { state_middle_strata_points = middle_strata_civfactory_points }

				#1 upper class point per civilian factory
				set_variable = {
					var = upper_strata_civfactory_points
					value = industrial_complex_level
				}

				add_to_variable = { state_upper_strata_points = upper_strata_civfactory_points }

				#Military factories

				#1 middle class point per military factory
				set_variable = {
					var = middle_strata_milfactory_points
					value = arms_factory_level
				}

				add_to_variable = { state_middle_strata_points = middle_strata_milfactory_points }

				#1 upper class point per military factory

				set_variable = {
					var = upper_strata_milfactory_points
					value = arms_factory_level
				}

				add_to_variable = { state_upper_strata_points = upper_strata_milfactory_points }

				#Infrastructure

				#Infrastructure elevates everyone slightly by decreasing lower strata points by 1 point per level
				set_variable = {
					var = lower_strata_infrastructure_points
					value = infrastructure_level
				}

				subtract_from_variable = { state_lower_strata_points = lower_strata_infrastructure_points }

				#Freedom values

				#Subtract 2x national freedom from the lower strata points. If it's negative, it will make more people be in the lower strata
				set_variable = {
					var = freedom_strata_mod
					value = PREV.freedom
				}

				multiply_variable = { freedom_strata_mod = 2 }


				subtract_from_variable = { state_lower_strata_points = freedom_strata_mod }

				#Taxes
	            if = {
	                limit = {
	                    PREV = {
	                        has_idea = very_high_taxes
	                    }
	                }
	                add_to_variable = { state_upper_strata_points = -1.5 }
	            }
	            if = {
	                limit = {
	                    PREV = {
	                        has_idea = high_taxes
	                    }
	                }
	                add_to_variable = { state_upper_strata_points = -0.75 }
	            }
	            if = {
	                limit = {
	                    PREV = {
	                        has_idea = low_taxes
	                    }
	                }
	                add_to_variable = { state_upper_strata_points = 0.75 }
	            }
	            if = {
	                limit = {
	                    OR = {
	                        PREV = {
	                        	has_idea = very_low_taxes
	                    	}
	                    }
	                }
	                add_to_variable = { state_upper_strata_points = 1.5 }
	            }

	            if = {
	                limit = {
	                    PREV = {
	                        has_idea = enforced_growth
	                   	}
	                }
	                #Families have to support large numbers of children, can't afford lots of education or to spend time on careers
	                subtract_from_variable = { state_middle_strata_points = 6 }
	            }

	            if = {
	                limit = {
	                    PREV = {
	                        has_idea = universal_suffrage
	                   	}
	                }
	                #Women have more rights and can begin to work careers
	                subtract_from_variable = { state_lower_strata_points = 10 }
	            }

	            if = {
	                limit = {
	                    PREV = {
	                        has_idea = free_elections
	                    }
	                }
               		#Regular people can be elected to administrative positions
               		add_to_variable = { state_middle_strata_points = 5 }
            	}

            	if = {
	                limit = {
	                    PREV = {
	                        has_idea = open_schools
	                    }
	                }
               		#People with a formal education are more easily able to pursue tertiary and quaternary service careers.
               		subtract_from_variable = { state_lower_strata_points = 7 }
            	}

            	if = {
	                limit = {
	                    PREV = {
	                        has_idea = compulsory_education
	                    }
	                }
               		#People with a formal education are more easily able to pursue tertiary and quaternary service careers.
               		subtract_from_variable = { state_lower_strata_points = 14 }
            	}

            	if = {
	                limit = {
	                    PREV = {
	                        has_idea = theocratic_state
	                    }
	                }
               		#Having a bureaucratic clergy allows people to join religious organisations and rise up in governmental ranks
               		add_to_variable = { state_middle_strata_points = 1 }
               		add_to_variable = { state_upper_strata_points = 0.5 }
            	}

            	if = {
	                limit = {
	                    PREV = {
	                        has_idea = closed_economy
	                    }
	                }
               		#Restricting trade makes raising capital difficult
               		subtract_from_variable = { state_upper_strata_points = 0.5 }
            	}

            	#Putting this here again, because I've seen weird things happening with points going below 0

				#ACTUAL RATIOS AND GROWTH / SHRINKAGE

				#Make the caps into percentages - first get the total of all points

				if = {
					limit = {
						check_variable = {
							var = state_upper_strata_points
							value = 0
							compare = less_than
						}
					}
					#Turn it positive, but make it a tiny value
					multiply_variable = {
						var = state_upper_strata_points
						value = -0.01
					}
				}

				if = {
					limit = {
						check_variable = {
							var = state_middle_strata_points
							value = 0
							compare = less_than
						}
					}
					#Turn it positive, but make it a tiny value
					multiply_variable = {
						var = state_middle_strata_points
						value = -0.01
					}
				}

				if = {
					limit = {
						check_variable = {
							var = state_lower_strata_points
							value = 0
							compare = less_than
						}
					}
					#Turn it positive, but make it a tiny value
					multiply_variable = {
						var = state_lower_strata_points
						value = -0.01
					}
				}

				if = {
							limit = {
								PREV = {
									OR = {
										has_government = vanguard_communism
									}
								}
							}
							set_variable = {
								var = state_upper_strata_points
								value = 0
							}
				}

				add_to_variable = { state_all_strata_points = state_upper_strata_points }
				add_to_variable = { state_all_strata_points = state_middle_strata_points }
				add_to_variable = { state_all_strata_points = state_lower_strata_points }

				#Then set the caps to equal the points, so we can turn them into percentages using sorcery
				set_variable = { state_upper_strata_cap = state_upper_strata_points }
				set_variable = { state_middle_strata_cap = state_middle_strata_points }
				set_variable = { state_lower_strata_cap = state_lower_strata_points }


				#Then divide each cap value by the state_all_strata_points total
				divide_variable = { state_upper_strata_cap = state_all_strata_points }
				divide_variable = { state_middle_strata_cap = state_all_strata_points }
				divide_variable = { state_lower_strata_cap = state_all_strata_points }

				#Multiply by 100. It's nice when a percentage looks like a real number
				multiply_variable = { state_upper_strata_cap = 100 }
				multiply_variable = { state_middle_strata_cap = 100 }
				multiply_variable = { state_lower_strata_cap = 100 }

				#METHOD:
				#Clamp the actual_ values at the _cap values and then add or subtract (_cap/100 + 0.5) every time this event runs

				#Actual current population ratios

				if = {
					limit = {
						NOT = {
							#Create the variables for actual class population ratios, and make them equivalent to the caps on the first time they are calculated
							has_state_flag = initial_strata_calc
						}
					}
						set_variable = {
							var = ratio_state_lower_strata
							value = state_lower_strata_cap
						}

						set_variable = {
							var = ratio_state_middle_strata
							value = state_middle_strata_cap
						}

						set_variable = {
							var = ratio_state_upper_strata
							value = state_upper_strata_cap
						}
					set_state_flag = initial_strata_calc
				}

				#Get an actual population number per stratum from these
				#APPLY FIX - USE BIG NUMBERS STATE POPULATIONS
				set_variable = { actual_state_lower_strata = var_state_population }
				divide_variable = { actual_state_lower_strata = 100 }
				multiply_variable = { actual_state_lower_strata = ratio_state_lower_strata }

				set_variable = { actual_state_middle_strata = var_state_population }
				divide_variable = { actual_state_middle_strata = 100 }
				multiply_variable = { actual_state_middle_strata = ratio_state_middle_strata }

				set_variable = { actual_state_upper_strata = var_state_population }
				divide_variable = { actual_state_upper_strata = 100 }
				multiply_variable = { actual_state_upper_strata = ratio_state_upper_strata }

				#Add to national strata ratios
				add_to_variable = { PREV.nation_all_lower_strata_ratio = ratio_state_lower_strata }
				add_to_variable = { PREV.nation_all_middle_strata_ratio = ratio_state_middle_strata }
				add_to_variable = { PREV.nation_all_upper_strata_ratio = ratio_state_upper_strata }
				add_to_variable = { PREV.strata_states_calculated = 1 }

				#Add to national strata populations
				add_to_variable = { PREV.nation_all_actual_lower_strata = actual_state_lower_strata }
				add_to_variable = { PREV.nation_all_actual_middle_strata = actual_state_middle_strata }
				add_to_variable = { PREV.nation_all_actual_upper_strata = actual_state_upper_strata }


			}

		divide_variable = { nation_all_lower_strata_ratio = strata_states_calculated }
		divide_variable = { nation_all_middle_strata_ratio = strata_states_calculated }
		divide_variable = { nation_all_upper_strata_ratio = strata_states_calculated }

		clear_variable = strata_states_calculated


		}

	}
}

#DO GROWTH UP TO OR DOWN TO CAPS
news_event = {
	id = social_classes.2
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	hidden = yes

	immediate = {
		every_country = {
			every_owned_state = {
				if = {
					limit = {
						has_state_flag = initial_strata_calc
					}

					if = {
						limit = {
							check_variable = { ratio_state_lower_strata > state_lower_strata_cap }
						}
						#Base rate of social mobility = 0.05%
						add_to_variable = {
							var = ratio_state_lower_strata
							value = -0.05
						}

						#Get the difference between the cap and the actual % ratio (positive or negative)
						set_variable = {
							var = lower_strata_cap_changerate
							value = state_lower_strata_cap
						}
						subtract_variable = {
							var = lower_strata_cap_changerate
							value = ratio_state_lower_strata
						}
						multiply_variable = {
							var = lower_strata_cap_changerate
							value = 0.1
						}
						add_to_variable = {
							var = ratio_state_lower_strata
							value = lower_strata_cap_changerate
						}
						clear_variable = lower_strata_cap_changerate
					}

					if = {
						limit = {
							check_variable = { ratio_state_lower_strata < state_lower_strata_cap }
						}
						#Base rate of social mobility = 0.05%
						add_to_variable = {
							var = ratio_state_lower_strata
							value = 0.05
						}

						#Get the difference between the cap and the actual % ratio (positive or negative)
						set_variable = {
							var = lower_strata_cap_changerate
							value = state_lower_strata_cap
						}
						subtract_variable = {
							var = lower_strata_cap_changerate
							value = ratio_state_lower_strata
						}
						multiply_variable = {
							var = lower_strata_cap_changerate
							value = 0.1
						}
						add_to_variable = {
							var = ratio_state_lower_strata
							value = lower_strata_cap_changerate
						}
						clear_variable = lower_strata_cap_changerate
					}

					if = {
						limit = {
							check_variable = { ratio_state_middle_strata > state_middle_strata_cap }
						}
						#Base rate of social mobility = 0.05%
						add_to_variable = {
							var = ratio_state_middle_strata
							value = -0.05
						}

						#Get the difference between the cap and the actual % ratio (positive or negative)
						set_variable = {
							var = middle_strata_cap_changerate
							value = state_middle_strata_cap
						}
						subtract_variable = {
							var = middle_strata_cap_changerate
							value = ratio_state_middle_strata
						}
						multiply_variable = {
							var = middle_strata_cap_changerate
							value = 0.1
						}
						add_to_variable = {
							var = ratio_state_middle_strata
							value = middle_strata_cap_changerate
						}
						clear_variable = middle_strata_cap_changerate
					}

					if = {
						limit = {
							check_variable = { ratio_state_middle_strata < state_middle_strata_cap }
						}
						#Base rate of social mobility = 0.05%
						add_to_variable = {
							var = ratio_state_middle_strata
							value = 0.05
						}

						#Get the difference between the cap and the actual % ratio (positive or negative)
						set_variable = {
							var = middle_strata_cap_changerate
							value = state_middle_strata_cap
						}
						subtract_variable = {
							var = middle_strata_cap_changerate
							value = ratio_state_middle_strata
						}
						multiply_variable = {
							var = middle_strata_cap_changerate
							value = 0.1
						}
						add_to_variable = {
							var = ratio_state_middle_strata
							value = middle_strata_cap_changerate
						}
						clear_variable = middle_strata_cap_changerate
					}

					if = {
						limit = {
							AND = {
								check_variable = { ratio_state_upper_strata > state_upper_strata_cap }
								PREV = {
									NOT = { has_government = vanguard_communism }
								}
							}
						}
						#Base rate of social mobility = 0.05%
						add_to_variable = {
							var = ratio_state_upper_strata
							value = -0.05
						}

						#Get the difference between the cap and the actual % ratio (positive or negative)
						set_variable = {
							var = upper_strata_cap_changerate
							value = state_upper_strata_cap
						}
						subtract_variable = {
							var = upper_strata_cap_changerate
							value = ratio_state_upper_strata
						}
						multiply_variable = {
							var = upper_strata_cap_changerate
							value = 0.1
						}
						add_to_variable = {
							var = ratio_state_upper_strata
							value = upper_strata_cap_changerate
						}
						clear_variable = upper_strata_cap_changerate
					}

					if = {
						limit = {
							AND = {
								check_variable = { ratio_state_upper_strata > state_upper_strata_cap }
								PREV = {
									NOT = { has_government = vanguard_communism }
								}
							}
						}
						#Base rate of social mobility = 0.05%
						add_to_variable = {
							var = ratio_state_upper_strata
							value = 0.05
						}

						#Get the difference between the cap and the actual % ratio (positive or negative)
						set_variable = {
							var = upper_strata_cap_changerate
							value = state_upper_strata_cap
						}
						subtract_variable = {
							var = upper_strata_cap_changerate
							value = ratio_state_upper_strata
						}
						multiply_variable = {
							var = upper_strata_cap_changerate
							value = 0.1
						}
						add_to_variable = {
							var = ratio_state_upper_strata
							value = upper_strata_cap_changerate
						}
						clear_variable = upper_strata_cap_changerate
					}

					#Make sure that no ratios have gone below 0. This appears to be a safer method of checking than using the clamp_variable method, which in my experience is unreliable - Sobisonator.
					if = {
						limit = {
							check_variable = { ratio_state_lower_strata < 0 }
						}
						set_variable = {
							var = ratio_state_lower_strata
							value = 0.01
						}
					}

					if = {
						limit = {
							check_variable = { ratio_state_middle_strata < 0 }
						}
						set_variable = {
							var = ratio_state_middle_strata
							value = 0.01
						}
					}

					if = {
						limit = {
							check_variable = { ratio_state_upper_strata < 0 }
						}
						set_variable = {
							var = ratio_state_upper_strata
							value = 0.01
						}
					}

					if = {
							limit = {
								PREV = {
									OR = {
										has_government = vanguard_communism
									}
								}
							}
							set_variable = {
								var = ratio_state_upper_strata
								value = 0
							}
					}


				}
			}
		}
	}
}

#SET BONUSES FOR OVERALL NATIONAL RATIOS OF STRATA
news_event = {
	id = social_classes.1
	picture = GFX_report_event_election_vote
	
	is_triggered_only = yes
	hidden = yes

	immediate = {

		every_country = {

			#First of all clear all old modifiers, so that you don't stack effects from the same strata if your levels change
			remove_ideas = lower_strata_ratio_5 
			remove_ideas = lower_strata_ratio_10 
			remove_ideas = lower_strata_ratio_15 
			remove_ideas = lower_strata_ratio_20 
			remove_ideas = lower_strata_ratio_25 
			remove_ideas = lower_strata_ratio_30 
			remove_ideas = lower_strata_ratio_35 
			remove_ideas = lower_strata_ratio_40 
			remove_ideas = lower_strata_ratio_45 
			remove_ideas = lower_strata_ratio_50 
			remove_ideas = lower_strata_ratio_55 
			remove_ideas = lower_strata_ratio_60 
			remove_ideas = lower_strata_ratio_65 
			remove_ideas = lower_strata_ratio_70 
			remove_ideas = lower_strata_ratio_75 
			remove_ideas = lower_strata_ratio_80 
			remove_ideas = lower_strata_ratio_85 
			remove_ideas = lower_strata_ratio_90 
			remove_ideas = lower_strata_ratio_95 
			remove_ideas = lower_strata_ratio_100 
			remove_ideas = middle_strata_ratio_5 
			remove_ideas = middle_strata_ratio_10 
			remove_ideas = middle_strata_ratio_15 
			remove_ideas = middle_strata_ratio_20 
			remove_ideas = middle_strata_ratio_25 
			remove_ideas = middle_strata_ratio_30 
			remove_ideas = middle_strata_ratio_35 
			remove_ideas = middle_strata_ratio_40 
			remove_ideas = middle_strata_ratio_45 
			remove_ideas = middle_strata_ratio_50 
			remove_ideas = middle_strata_ratio_55 
			remove_ideas = middle_strata_ratio_60 
			remove_ideas = middle_strata_ratio_65 
			remove_ideas = middle_strata_ratio_70 
			remove_ideas = middle_strata_ratio_75 
			remove_ideas = middle_strata_ratio_80 
			remove_ideas = middle_strata_ratio_85 
			remove_ideas = middle_strata_ratio_90 
			remove_ideas = middle_strata_ratio_95 
			remove_ideas = middle_strata_ratio_100 
			#ADD REMOVAL OF UPPER CLASS EFFECTS

			#Effects for differing levels are handled within the idea itself. Here, the modifier is simply set.
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 5 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 10  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 10 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 15  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_10 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 15 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 20  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_15 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 20 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 25  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_20 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 25 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 30  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_25 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 30 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 35  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_30 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 35 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 40  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_35 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 40 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 45  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_40 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 45 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 50  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_45 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 50 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 55  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_50 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 55 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 60  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_55 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 60 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 65  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_60 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 65 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 70  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_65 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 70 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 75  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_70 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 75 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 80  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_75 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 80 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 85  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_80 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 85 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 90  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_85 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 90 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 95  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_90 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 95 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 100  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_95 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_lower_strata_ratio > 100 } 
                                                    NOT = { check_variable = { nation_all_lower_strata_ratio > 105  } } 
                                                } 
                                            }
                                            add_ideas = lower_strata_ratio_100 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 5 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 10  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 10 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 15  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_10 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 15 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 20  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_15 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 20 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 25  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_20 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 25 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 30  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_25 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 30 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 35  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_30 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 35 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 40  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_35 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 40 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 45  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_40 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 45 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 50  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_45 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 50 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 55  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_50 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 55 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 60  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_55 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 60 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 65  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_60 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 65 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 70  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_65 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 70 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 75  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_70 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 75 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 80  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_75 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 80 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 85  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_80 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 85 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 90  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_85 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 90 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 95  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_90 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 95 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 100  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_95 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_middle_strata_ratio > 100 } 
                                                    NOT = { check_variable = { nation_all_middle_strata_ratio > 105  } } 
                                                } 
                                            }
                                            add_ideas = middle_strata_ratio_100 
    
                                    }

if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 0.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 1.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_0.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 1.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 1.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_1.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 1.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 2.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_1.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 2.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 2.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_2.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 2.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 3.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_2.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 3.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 3.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_3.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 3.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 4.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_3.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 4.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 4.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_4.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 4.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 5.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_4.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 5.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 5.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_5.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 5.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 6.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_5.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 6.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 6.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_6.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 6.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 7.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_6.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 7.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 7.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_7.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 7.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 8.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_7.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 8.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 8.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_8.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 8.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 9.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_8.5 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 9.0 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 9.5  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_9.0 
    
                                    }
if = { 
                                            limit = {
                                                AND = { 
                                                    check_variable = { nation_all_upper_strata_ratio > 9.5 } 
                                                    NOT = { check_variable = { nation_all_upper_strata_ratio > 10.0  } } 
                                                } 
                                            }
                                            add_ideas = upper_strata_ratio_9.5 
    
                                    }
if = { 
                                            limit = {
                                                check_variable = { nation_all_upper_strata_ratio > 10.0 }  
                                            }
                                            add_ideas = upper_strata_ratio_10.0 
    
                                    }

		}
}

#GET THE RATIOS OF CAREERS WITHIN EACH SOCIAL STRATA PER STATE
news_event = {
	id = social_classes.2
	picture = GFX_report_event_election_vote
	
	is_triggered_only = yes

	hidden = yes

	immediate = {

		every_country = {

			set_variable = { 
				var = nation_all_rural_lower_s
				value = 0
			}

			set_variable = { 
				var = nation_all_industrial_lower_s
				value = 0
			}

			set_variable = { 
				var = nation_all_industrial_lower_s
				value = 0
			}

			set_variable = { 
				var = nation_all_service_lower_s
				value = 0
			}

			set_variable = { 
				var = nation_all_military_lower_s
				value = 0
			}

			set_variable = { 
				var = nation_all_rural_middle_s
				value = 0
			}

			set_variable = { 
				var = nation_all_industrial_middle_s
				value = 0
			}

			set_variable = { 
				var = nation_all_service_middle_s
				value = 0
			}

			set_variable = { 
				var = nation_all_military_middle_s
				value = 0
			}

			set_variable = { 
				var = nation_all_hereditary_upper_s
				value = 0
			}

			set_variable = { 
				var = nation_all_mercantile_upper_s
				value = 0
			}

			set_variable = { 
				var = nation_all_military_upper_s
				value = 0
			}

			set_variable = { 
				var = nation_all_rural_lower_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_industrial_lower_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_industrial_lower_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_service_lower_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_military_lower_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_rural_middle_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_industrial_middle_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_service_middle_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_military_middle_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_hereditary_upper_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_mercantile_upper_s_ratio
				value = 0
			}

			set_variable = { 
				var = nation_all_military_upper_s_ratio
				value = 0
			}

			set_variable = {
					var = military_as_percentage_of_pop
					value = army_manpower
				}

				add_to_variable = {
					var = military_as_percentage_of_pop
					value = amount_manpower_in_deployment_queue
				}

				#This could be a number over 2.3 million, so here comes the overflow fixer:
				set_variable = {
               		var = military_pop_mod_one
               		value = military_as_percentage_of_pop
               	}
               	round_variable = military_pop_mod_one

                set_variable = {
                    var = floating_value_military_pop
                    value = military_as_percentage_of_pop
                }

                #Get the floating point value of the integer. This is the key indicator as to how many times the value has
                #overflowed
                subtract_from_variable = {
                    var = floating_value_military_pop
                    value = military_pop_mod_one
                }        


                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = -0.296
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 2
                    }
                }
                #Unseen v
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = 0.704
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 4
                    }
                }
                #Unseen v
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = -0.592
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 4
                    }
                }
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = 0.408
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 4
                    }
                }
                #Unseen v
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = -0.888
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 6
                    }
                }
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = 0.112
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 6
                    }
                }
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = -0.184
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 8
                    }
                }
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = -0.48
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 10
                    }
                }
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = 0.224
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 12
                    }
                }
                if = {
                    limit = {
                        check_variable = {
                            var = floating_value_military_pop
                            value = -0.776
                            compare = equals
                        }
                    }
                    set_variable = {
                        var = pop_overflow_counter
                        value = 14
                    }
                }


                if = {
                	limit = {
	                	check_variable = {
		                	var = military_as_percentage_of_pop
		                	value = military_pop_mod_one
		                	compare = not_equals
	               		}
                	}
                	set_variable = {
                		var = mil_overflow_warning
                		value = 1
                	}
                }
                #Make the number easier to handle without risk of overflow at 2^31
                multiply_variable = {
                	var = military_as_percentage_of_pop
                	value = 0.01
               	}

               	#Check if the value has suffered an overflow due to going over a value of 2^31
                if = {
                	limit = {
                		check_variable = {
                			var = mil_overflow_warning
                			value = 1
                			compare = equals
                		}
                	}
                	#Create a temporary variable to find the difference that we need to add to make the numbers equivalent
                	set_variable = {
                		var = var_overflow_difference
                		value = 21474.83
                	}

                    multiply_variable = {
                        var = var_overflow_difference
                        value = pop_overflow_counter
                    }

                	#Add (((2^31) -1) x 0.01 a sufficient number of times to get back to the real value)
                	add_to_variable = {
                		var = military_as_percentage_of_pop
                		value = var_overflow_difference
                	}

                	#If the difference is negative, make it positive
                	if = {
                		limit = {
                			check_variable = {
                				var = temp_var_overflow_difference
                				value = 0
                				compare = less_than
                			}
                		}
                		multiply_temp_variable = {
                			var = temp_var_overflow_difference
                			value = -1
                		}
                        multiply_temp_variable = {
                            var = temp_var_overflow_difference
                            value = pop_overflow_counter
                        }
                	}

                	#Add the result to the military_as_percentage_of_pop total
                	add_to_variable = {
                		var = military_as_percentage_of_pop
                		value = temp_var_overflow_difference
                	}

                    
                }

                #For some reason, the actual value to variable translation is slightly inaccurate. This helps bring it a bit closer to the real value
                multiply_variable = {
                    var = military_as_percentage_of_pop
                    value = 0.999
                }

                #Delete the variables used in calculation
                clear_variable = mil_overflow_warning

                #Now divide military_as_percentage_of_pop by the total population of the country
                divide_variable = {
                	var = military_as_percentage_of_pop
                	value = total_population
                }

                #Multiply by 100 to make it a percentage
                multiply_variable = {
                	var = military_as_percentage_of_pop
                	value = 100
                }

                #Most military are from the lower strata, so skew this way.
                set_variable = {
                	var = lower_strata_percentage_in_army
                	value = military_as_percentage_of_pop
                }

                set_variable = {
                	var = middle_strata_percentage_in_army
                	value = military_as_percentage_of_pop
                }

                multiply_variable = {
                	var = lower_strata_percentage_in_army
                	value = 1.1
                }

                multiply_variable = {
                	var = middle_strata_percentage_in_army
                	value = 0.9
                }

                #The percentage of upper strata, who don't make up the general ranks of the army, is then filled by the lower strata
                add_to_variable = {
                	var = lower_strata_percentage_in_army
                	value = nation_all_upper_strata_ratio
                }

                set_variable = {
                	var = non_military_lower_pop_percentage
                	value = 100
                }

                set_variable = {
                	var = non_military_middle_pop_percentage
                	value = 100
                }

                subtract_from_variable = {
                	var = non_military_middle_pop_percentage
                	value = middle_strata_percentage_in_army
                }

                subtract_from_variable = {
                	var = non_military_middle_pop_percentage
                	value = lower_strata_percentage_in_army
                }

			every_owned_state = {

				#Divide each class points value by this to find a %
				set_variable = {
					var = state_all_lower_career_points
					value = 0
				}

				set_variable = {
					var = state_all_middle_career_points
					value = 0
				}

				set_variable = {
					var = state_all_upper_career_points
					value = 0
				}


				#Total points per career

				set_variable = {
					var = state_rural_lower_s_points
					value = 0
				}

				set_variable = {
					var = state_industrial_lower_s_points
					value = 0
				}

				set_variable = {
					var = state_service_lower_s_points
					value = 0
				}

				set_variable = {
					var = state_rural_middle_s_points
					value = 0
				}

				set_variable = {
					var = state_industrial_middle_s_points
					value = 0
				}

				set_variable = {
					var = state_service_middle_s_points
					value = 0
				}

				set_variable = {
					var = state_hereditary_upper_s_points
					value = 0
				}

				set_variable = {
					var = state_mercantile_upper_s_points
					value = 0
				}

				set_variable = {
					var = state_military_upper_s_points
					value = 0
				}

				#Calculations

				#Default levels
				add_to_variable = {
					var = state_rural_lower_s_points
					value = 5
				}

				add_to_variable = {
					var = state_rural_middle_s_points
					value = 5
				}

				add_to_variable = {
					var = state_hereditary_upper_points
					value = 11
				}

				add_to_variable = {
					var = state_mercantile_upper_points
					value = 2
				}

				add_to_variable = {
					value = state_military_upper_points
					value = 1
				}

				if = {
					limit = {
						has_idea = pre_industrial_era
					}
					add_to_variable = {
						var = state_rural_lower_s_points
						value = 1
					}
					add_to_variable = {
						var = state_rural_middle_s_points
						value = 1
					}
					add_to_variable = {
						var = state_hereditary_upper_points
						value = 1
					}
				}

				#Rural workers from farms

				add_to_variable = {
					var = state_rural_middle_s_points
					value = farm_level
				}

				add_to_variable = {
					var = state_rural_lower_s_points
					value = farm_level
				}

				add_to_variable = {
					var = state_rural_middle_s_points
					value = cotton_farm_level
				}

				add_to_variable = {
					var = state_rural_lower_s_points
					value = cotton_farm_level
				}

				add_to_variable = {
					var = state_rural_middle_s_points
					value = logging_camp_level
				}

				add_to_variable = {
					var = state_rural_lower_s_points
					value = logging_camp_level
				}

				if = {
					limit = {
						has_state_category = rural
					}
					add_to_variable = {
						var = state_rural_lower_s_points
						value = 2
					}
					add_to_variable = {
						var = state_rural_middle_s_points
						value = 2
					}
				}

				if = {
					limit = {
						has_state_category = pastoral
					}
					add_to_variable = {
						var = state_rural_lower_s_points
						value = 3
					}
					add_to_variable = {
						var = state_rural_middle_s_points
						value = 3
					}
				}

				#Capitalists from freedom to rise up social classes
				if = {
					limit = {
						check_variable = {
							var = PREV.freedom
							value = 1
							compare = greater_than
						}
					}
					add_to_variable = {
						var = state_mercantile_upper_s_points
						value = PREV.freedom
					}
				}

				#Industrial workers from factories

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = industrial_complex_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = industrial_complex_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = industrial_complex_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = arms_factory_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = arms_factory_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = arms_factory_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = machine_parts_factory_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = machine_parts_factory_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = machine_parts_factory_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = steel_mill_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = steel_mill_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = steel_mill_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = dockyard_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = dockyard_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = dockyard_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = naval_base_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = naval_base_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = synthetic_refinery_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = synthetic_refinery_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = synthetic_refinery_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = nuclear_reactor_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = nuclear_reactor_level
				}

				add_to_variable = {
					var = state_industrial_lower_s_points
					value = coal_mine_level
				}

				add_to_variable = {
					var = state_industrial_middle_s_points
					value = coal_mine_level
				}

				add_to_variable = {
					var = state_mercantile_upper_s_points
					value = coal_mine_level
				}

				# Service jobs - servants, civil servants, doctors, lawyers, what have you.
				if = {
					limit = {
						has_state_category = city
					}
					add_to_variable = {
						var = state_service_lower_s_points
						value = 2
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 2
					}
					add_to_variable = {
						var = state_mercantile_upper_s_points
						value = 1
					}
				}

				if = {
					limit = {
						has_state_category = large_city
					}
					add_to_variable = {
						var = state_service_lower_s_points
						value = 3
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 3
					}
					add_to_variable = {
						var = state_mercantile_upper_s_points
						value = 2
					}
				}

				if = {
					limit = {
						has_state_category = metropolis
					}
					add_to_variable = {
						var = state_service_lower_s_points
						value = 4
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 5
					}
					add_to_variable = {
						var = state_mercantile_upper_s_points
						value = 3
					}
				}

				if = {
					limit = {
						has_state_category = metropolis
					}
					add_to_variable = {
						var = state_service_lower_s_points
						value = 5
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 6
					}
					add_to_variable = {
						var = state_mercantile_upper_s_points
						value = 4
					}
				}

				if = {
					limit = {
						has_state_category = megalopolis
					}
					add_to_variable = {
						var = state_service_lower_s_points
						value = 7
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 8
					}
					add_to_variable = {
						var = state_mercantile_upper_s_points
						value = 5
					}
				}

				#Servants
				add_to_variable = {
					var = state_service_lower_s_points
					value = ratio_state_upper_strata
				}

				#Professionals like lawyers, accountants etc.
				add_to_variable = {
					var = state_service_middle_s_points
					value = state_upper_strata_points
				}

				#Teachers, and educated people who become rich
				if = {
					limit = {
						has_idea = privileged_education
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 1
					}
					add_to_variable = {
						var = state_upper_mercantile_s_points
						value = 1
					}
				}

				if = {
					limit = {
						has_idea = open_schools
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 2
					}
					add_to_variable = {
						var = state_upper_mercantile_s_points
						value = 2
					}
				}

				if = {
					limit = {
						has_idea = compulsory_education
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 4
					}
					add_to_variable = {
						var = state_upper_mercantile_s_points
						value = 4
					}
				}

				#High priesthood
				if = {
					limit = {
						has_idea = theocratic_state
					}
					add_to_variable = {
						var = state_hereditary_upper_s_points
						value = 1
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 1
					}
				}

				#Civil service
				if = {
					limit = {
						OR = {
							has_idea = human_rights
							has_idea = constitution_adopted
							has_idea = limited_constitution
						}
					}
					add_to_variable = {
						var = state_service_middle_s_points
						value = 1
					}
				}

				#State totals
				add_to_variable = {
					var = state_all_lower_career_points
					value = state_rural_lower_s_points
				}

				add_to_variable = {
					var = state_all_lower_career_points
					value = state_industrial_lower_s_points
				}

				add_to_variable = {
					var = state_all_lower_career_points
					value = state_service_lower_s_points
				}

				add_to_variable = {
					var = state_all_middle_career_points
					value = state_rural_middle_s_points
				}

				add_to_variable = {
					var = state_all_middle_career_points
					value = state_industrial_middle_s_points
				}

				add_to_variable = {
					var = state_all_middle_career_points
					value = state_service_middle_s_points
				}

				add_to_variable = {
					var = state_all_upper_career_points
					value = state_hereditary_upper_s_points
				}

				add_to_variable = {
					var = state_all_upper_career_points
					value = state_mercantile_upper_s_points
				}

				add_to_variable = {
					var = state_all_upper_career_points
					value = state_military_upper_s_points
				}

				#Get ratios - first set values

				set_variable = {
					var = state_rural_lower_s_ratio
					value = state_rural_lower_s_points
				}

				set_variable = {
					var = state_industrial_lower_s_ratio
					value = state_industrial_lower_s_points
				}

				set_variable = {
					var = state_service_lower_s_ratio
					value = state_service_lower_s_points
				}

				set_variable = {
					var = state_rural_middle_s_ratio
					value = state_rural_middle_s_points
				}

				set_variable = {
					var = state_industrial_middle_s_ratio
					value = state_industrial_middle_s_points
				}

				set_variable = {
					var = state_service_middle_s_ratio
					value = state_service_middle_s_points
				}

				set_variable = {
					var = state_hereditary_upper_s_ratio
					value = state_hereditary_upper_s_points
				}

				set_variable = {
					var = state_mercantile_upper_s_ratio
					value = state_mercantile_upper_s_points
				}

				set_variable = {
					var = state_military_upper_s_ratio
					value = state_military_upper_s_points
				}

				#Then turn them into percentages. Divide by class total points and multiply by non-military percentage

				#Lower strata
				divide_variable = {
					var = state_rural_lower_s_ratio
					value = state_all_lower_career_points
				}

				multiply_variable = {
					var = state_rural_lower_s_ratio
					value = non_military_pop_lower_percentage
				}

				divide_variable = {
					var = state_industrial_lower_s_ratio
					value = state_all_lower_career_points
				}

				multiply_variable = {
					var = state_industrial_lower_s_ratio
					value = non_military_lower_pop_percentage
				}

				divide_variable = {
					var = state_service_lower_s_ratio
					value = state_all_lower_career_points
				}

				multiply_variable = {
					var = state_service_lower_s_ratio
					value = non_military_lower_pop_percentage
				}

				set_variable = {
					var = state_military_lower_s_ratio
					value = lower_strata_percentage_in_army
				}

				#Middle strata
				divide_variable = {
					var = state_rural_middle_s_ratio
					value = state_all_middle_career_points
				}

				multiply_variable = {
					var = state_rural_middle_s_ratio
					value = non_military_pop_middle_percentage
				}

				divide_variable = {
					var = state_industrial_middle_s_ratio
					value = state_all_middle_career_points
				}

				multiply_variable = {
					var = state_industrial_middle_s_ratio
					value = non_military_middle_pop_percentage
				}

				divide_variable = {
					var = state_service_middle_s_ratio
					value = state_all_middle_career_points
				}

				multiply_variable = {
					var = state_service_middle_s_ratio
					value = non_military_middle_pop_percentage
				}

				set_variable = {
					var = state_military_middle_s_ratio
					value = middle_strata_percentage_in_army
				}

				#Upper strata
				divide_variable = {
					var = state_hereditary_upper_s_ratio
					value = state_all_upper_career_points
				}

				multiply_variable = {
					var = state_hereditary_upper_s_ratio
					value = 100
				}

				divide_variable = {
					var = state_mercantile_upper_s_ratio
					value = state_all_upper_career_points
				}

				multiply_variable = {
					var = state_mercantile_upper_s_ratio
					value = 100
				}

				divide_variable = {
					var = state_military_upper_s_ratio
					value = state_all_upper_career_points
				}

				multiply_variable = {
					var = state_military_upper_s_ratio
					value = 100
				}

				#Now turn the ratios into actual numbers for the state

				#Lower
				set_variable = { state_actual_rural_lower_s = actual_state_lower_strata }
				divide_variable = { state_actual_rural_lower_s = 100 }
				multiply_variable = { state_actual_rural_lower_s = state_rural_lower_s_ratio }

				set_variable = { state_actual_industrial_lower_s = actual_state_lower_strata }
				divide_variable = { state_actual_industrial_lower_s = 100 }
				multiply_variable = { state_actual_industrial_lower_s = state_industrial_lower_s_ratio }

				set_variable = { state_actual_service_lower_s = actual_state_lower_strata }
				divide_variable = { state_actual_service_lower_s = 100 }
				multiply_variable = { state_actual_service_lower_s = state_service_lower_s_ratio }

				set_variable = { state_actual_military_lower_s = actual_state_lower_strata }
				divide_variable = { state_actual_military_lower_s = 100 }
				multiply_variable = { state_actual_military_lower_s = state_military_lower_s_ratio }
				
				#middle
				set_variable = { state_actual_rural_middle_s = actual_state_middle_strata }
				divide_variable = { state_actual_rural_middle_s = 100 }
				multiply_variable = { state_actual_rural_middle_s = state_rural_middle_s_ratio }

				set_variable = { state_actual_industrial_middle_s = actual_state_middle_strata }
				divide_variable = { state_actual_industrial_middle_s = 100 }
				multiply_variable = { state_actual_industrial_middle_s = state_industrial_middle_s_ratio }

				set_variable = { state_actual_service_middle_s = actual_state_middle_strata }
				divide_variable = { state_actual_service_middle_s = 100 }
				multiply_variable = { state_actual_service_middle_s = state_service_middle_s_ratio }

				set_variable = { state_actual_military_middle_s = actual_state_middle_strata }
				divide_variable = { state_actual_military_middle_s = 100 }
				multiply_variable = { state_actual_military_middle_s = state_military_middle_s_ratio }

				#upper
				set_variable = { state_actual_hereditary_upper_s = actual_state_upper_strata }
				divide_variable = { state_actual_hereditary_upper_s = 100 }
				multiply_variable = { state_actual_hereditary_upper_s = state_hereditary_upper_s_ratio }

				set_variable = { state_actual_mercantile_upper_s = actual_state_upper_strata }
				divide_variable = { state_actual_mercantile_upper_s = 100 }
				multiply_variable = { state_actual_mercantile_upper_s = state_mercantile_upper_s_ratio }

				set_variable = { state_actual_military_upper_s = actual_state_upper_strata }
				divide_variable = { state_actual_military_upper_s = 100 }
				multiply_variable = { state_actual_military_upper_s = state_military_upper_s_ratio }

				#Add these to the national totals
				add_to_variable = { PREV.nation_all_rural_lower_s_ratio = state_rural_lower_s_ratio }
				add_to_variable = { PREV.nation_all_industrial_lower_s_ratio = state_industrial_lower_s_ratio }
				add_to_variable = { PREV.nation_all_service_lower_s_ratio = state_service_lower_s_ratio }
				add_to_variable = { PREV.nation_all_military_lower_s_ratio = state_military_lower_s_ratio }
				add_to_variable = { PREV.nation_all_rural_middle_s_ratio = state_rural_middle_s_ratio }
				add_to_variable = { PREV.nation_all_industrial_middle_s_ratio = state_industrial_middle_s_ratio }
				add_to_variable = { PREV.nation_all_service_middle_s_ratio = state_service_middle_s_ratio }
				add_to_variable = { PREV.nation_all_military_middle_s_ratio = state_military_middle_s_ratio }
				add_to_variable = { PREV.nation_all_hereditary_upper_s_ratio = state_hereditary_upper_s_ratio }
				add_to_variable = { PREV.nation_all_mercantile_upper_s_ratio = state_mercantile_upper_s_ratio }
				add_to_variable = { PREV.nation_all_military_upper_s_ratio = state_military_upper_s_ratio }
				add_to_variable = { PREV.career_states_calculated = 1 }

				#Add to national strata populations
				add_to_variable = { PREV.nation_all_rural_lower_s = state_actual_rural_lower_s }
				add_to_variable = { PREV.nation_all_industrial_lower_s = state_actual_industrial_lower_s }
				add_to_variable = { PREV.nation_all_service_lower_s = state_actual_service_lower_s }
				add_to_variable = { PREV.nation_all_military_lower_s = state_actual_military_lower_s }
				add_to_variable = { PREV.nation_all_rural_middle_s = state_actual_rural_middle_s }
				add_to_variable = { PREV.nation_all_industrial_middle_s = state_actual_industrial_middle_s }
				add_to_variable = { PREV.nation_all_service_middle_s = state_actual_service_middle_s }
				add_to_variable = { PREV.nation_all_military_middle_s = state_actual_military_middle_s }
				add_to_variable = { PREV.nation_all_hereditary_upper_s = state_actual_hereditary_upper_s }
				add_to_variable = { PREV.nation_all_mercantile_upper_s = state_actual_mercantile_upper_s }
				add_to_variable = { PREV.nation_all_military_upper_s = state_actual_military_upper_s }

				#End of state-scope calculations
				#Now clear all the variables that we aren't using any more
				clear_variable = state_all_lower_career_points
				clear_variable = state_all_middle_career_points
				clear_variable = state_all_upper_career_points
				clear_variable = state_rural_lower_s_points
				clear_variable = state_industrial_lower_s_points
				clear_variable = state_service_lower_s_points
				clear_variable = state_rural_middle_s_points
				clear_variable = state_industrial_middle_s_points
				clear_variable = state_service_middle_s_points
				clear_variable = state_hereditary_upper_s_points
				clear_variable = state_mercantile_upper_s_points
				clear_variable = state_military_upper_s_points

			}

		divide_variable = { PREV.nation_all_rural_lower_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_industrial_lower_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_service_lower_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_military_lower_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_rural_middle_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_industrial_middle_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_service_middle_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_military_middle_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_hereditary_upper_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_mercantile_upper_s_ratio = career_states_calculated }
		divide_variable = { PREV.nation_all_military_upper_s_ratio = career_states_calculated }

		clear_variable = career_states_calculated

		}


	}

#CALCULTE THE POLITICAL LEANINGS OF STRATA BY STATE IN A DIFFERENT FILE
